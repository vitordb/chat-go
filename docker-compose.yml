version: '3'

services:
  postgres:
    image: postgres:latest
    container_name: chat-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: chatapp
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:management
    container_name: chat-rabbitmq
    ports:
      - "5672:5672"  # AMQP protocol port
      - "15672:15672"  # Management interface port
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 5s
      timeout: 5s
      retries: 5

  server:
    build:
      context: .
      dockerfile: Dockerfile.server
    container_name: chat-server
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=postgres
      - RABBITMQ_HOST=rabbitmq
    restart: always

  bot:
    build:
      context: .
      dockerfile: Dockerfile.bot
    container_name: chat-bot
    depends_on:
      - server
      - rabbitmq
    environment:
      - RABBITMQ_HOST=rabbitmq
    restart: always

volumes:
  postgres_data: 